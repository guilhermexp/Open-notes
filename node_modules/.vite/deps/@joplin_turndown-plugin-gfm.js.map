{
  "version": 3,
  "sources": ["../../@joplin/turndown-plugin-gfm/lib/turndown-plugin-gfm.cjs.js"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar highlightRegExp = /highlight-(?:text|source)-([a-z0-9]+)/;\n\nfunction highlightedCodeBlock (turndownService) {\n  turndownService.addRule('highlightedCodeBlock', {\n    filter: function (node) {\n      var firstChild = node.firstChild;\n      return (\n        node.nodeName === 'DIV' &&\n        highlightRegExp.test(node.className) &&\n        firstChild &&\n        firstChild.nodeName === 'PRE'\n      )\n    },\n    replacement: function (content, node, options) {\n      var className = node.className || '';\n      var language = (className.match(highlightRegExp) || [null, ''])[1];\n\n      return (\n        '\\n\\n' + options.fence + language + '\\n' +\n        node.firstChild.textContent +\n        '\\n' + options.fence + '\\n\\n'\n      )\n    }\n  });\n}\n\nfunction strikethrough (turndownService) {\n  turndownService.addRule('strikethrough', {\n    filter: ['del', 's', 'strike'],\n    replacement: function (content) {\n      return '~~' + content + '~~'\n    }\n  });\n}\n\nvar indexOf = Array.prototype.indexOf;\nvar every = Array.prototype.every;\nvar rules = {};\nvar alignMap = { left: ':---', right: '---:', center: ':---:' };\n\nlet isCodeBlock_ = null;\nlet options_ = null;\n\n// We need to cache the result of tableShouldBeSkipped() as it is expensive.\n// Caching it means we went from about 9000 ms for rendering down to 90 ms.\n// Fixes https://github.com/laurent22/joplin/issues/6736\nconst tableShouldBeSkippedCache_ = new WeakMap();\n\nfunction getAlignment(node) {\n  return node ? (node.getAttribute('align') || node.style.textAlign || '').toLowerCase() : '';\n}\n\nfunction getBorder(alignment) {\n  return alignment ? alignMap[alignment] : '---';\n}\n\nfunction getColumnAlignment(table, columnIndex) {\n  var votes = {\n    left: 0,\n    right: 0,\n    center: 0,\n    '': 0,\n  };\n\n  var align = '';\n\n  for (var i = 0; i < table.rows.length; ++i) {\n    var row = table.rows[i];\n    if (columnIndex < row.childNodes.length) {\n      var cellAlignment = getAlignment(row.childNodes[columnIndex]);\n      ++votes[cellAlignment];\n\n      if (votes[cellAlignment] > votes[align]) {\n        align = cellAlignment;\n      }\n    }\n  }\n\n  return align;\n}\n\nrules.tableCell = {\n  filter: ['th', 'td'],\n  replacement: function (content, node) {\n    if (tableShouldBeSkipped(nodeParentTable(node))) return content;\n    return cell(content, node)\n  }\n};\n\nrules.tableRow = {\n  filter: 'tr',\n  replacement: function (content, node) {\n    const parentTable = nodeParentTable(node);\n    if (tableShouldBeSkipped(parentTable)) return content;\n\n    var borderCells = '';\n\n    if (isHeadingRow(node)) {\n      const colCount = tableColCount(parentTable);\n      for (var i = 0; i < colCount; i++) {\n        const childNode = i < node.childNodes.length ? node.childNodes[i] : null;\n        var border = getBorder(getColumnAlignment(parentTable, i));\n        borderCells += cell(border, childNode, i);\n      }\n    }\n    return '\\n' + content + (borderCells ? '\\n' + borderCells : '')\n  }\n};\n\nrules.table = {\n  filter: function (node, options) {\n    return node.nodeName === 'TABLE';\n  },\n\n  replacement: function (content, node) {\n    // Only convert tables that can result in valid Markdown\n    // Other tables are kept as HTML using `keep` (see below).\n    if (tableShouldBeHtml(node, options_)) {\n      let html = node.outerHTML;\n      let divParent = nodeParentDiv(node);\n      // Make table in HTML format horizontally scrollable by give table a div parent, so the width of the table is limited to the screen width.\n\t    // see https://github.com/laurent22/joplin/pull/10161\n      // test cases:\n      // packages/app-cli/tests/html_to_md/preserve_nested_tables.html\n      // packages/app-cli/tests/html_to_md/table_with_blockquote.html\n      // packages/app-cli/tests/html_to_md/table_with_code_1.html\n      // packages/app-cli/tests/html_to_md/table_with_code_2.html\n      // packages/app-cli/tests/html_to_md/table_with_code_3.html\n      // packages/app-cli/tests/html_to_md/table_with_heading.html\n      // packages/app-cli/tests/html_to_md/table_with_hr.html\n      // packages/app-cli/tests/html_to_md/table_with_list.html\n      if (divParent === null || !divParent.classList.contains('joplin-table-wrapper')){\n        return `\\n\\n<div class=\"joplin-table-wrapper\">${html}</div>\\n\\n`;\n      } else {\n        return html\n      }\n    } else {\n      if (tableShouldBeSkipped(node)) return content;\n\n      // Ensure there are no blank lines\n      content = content.replace(/\\n+/g, '\\n');\n\n      // If table has no heading, add an empty one so as to get a valid Markdown table\n      var secondLine = content.trim().split('\\n');\n      if (secondLine.length >= 2) secondLine = secondLine[1];\n      var secondLineIsDivider = /\\| :?---/.test(secondLine);\n\n      var columnCount = tableColCount(node);\n      var emptyHeader = '';\n      if (columnCount && !secondLineIsDivider) {\n        emptyHeader = '|' + '     |'.repeat(columnCount) + '\\n' + '|';\n        for (var columnIndex = 0; columnIndex < columnCount; ++columnIndex) {\n          emptyHeader += ' ' + getBorder(getColumnAlignment(node, columnIndex)) + ' |';\n        }\n      }\n\n      const captionContent = node.caption ? node.caption.textContent || '' : '';\n      const caption = captionContent ? `${captionContent}\\n\\n` : '';\n      const tableContent = `${emptyHeader}${content}`.trimStart();\n      return `\\n\\n${caption}${tableContent}\\n\\n`;\n    }\n  }\n};\n\nrules.tableCaption = {\n  filter: ['caption'],\n  replacement: () => '',\n};\n\nrules.tableColgroup = {\n  filter: ['colgroup', 'col'],\n  replacement: () => '',\n};\n\nrules.tableSection = {\n  filter: ['thead', 'tbody', 'tfoot'],\n  replacement: function (content) {\n    return content\n  }\n};\n\n// A tr is a heading row if:\n// - the parent is a THEAD\n// - or if its the first child of the TABLE or the first TBODY (possibly\n//   following a blank THEAD)\n// - and every cell is a TH\nfunction isHeadingRow (tr) {\n  var parentNode = tr.parentNode;\n  return (\n    parentNode.nodeName === 'THEAD' ||\n    (\n      parentNode.firstChild === tr &&\n      (parentNode.nodeName === 'TABLE' || isFirstTbody(parentNode)) &&\n      every.call(tr.childNodes, function (n) { return n.nodeName === 'TH' })\n    )\n  )\n}\n\nfunction isFirstTbody (element) {\n  var previousSibling = element.previousSibling;\n  return (\n    element.nodeName === 'TBODY' && (\n      !previousSibling ||\n      (\n        previousSibling.nodeName === 'THEAD' &&\n        /^\\s*$/i.test(previousSibling.textContent)\n      )\n    )\n  )\n}\n\nfunction cell (content, node = null, index = null) {\n  if (index === null) index = indexOf.call(node.parentNode.childNodes, node);\n  var prefix = ' ';\n  if (index === 0) prefix = '| ';\n  let filteredContent = content.trim().replace(/\\n\\r/g, '<br>').replace(/\\n/g, \"<br>\");\n  filteredContent = filteredContent.replace(/\\|+/g, '\\\\|');\n  while (filteredContent.length < 3) filteredContent += ' ';\n  if (node) filteredContent = handleColSpan(filteredContent, node, ' ');\n  return prefix + filteredContent + ' |'\n}\n\nfunction nodeContainsTable(node) {\n  if (!node.childNodes) return false;\n\n  for (let i = 0; i < node.childNodes.length; i++) {\n    const child = node.childNodes[i];\n    if (child.nodeName === 'TABLE') return true;\n    if (nodeContainsTable(child)) return true;\n  }\n  return false;\n}\n\nconst nodeContains = (node, types) => {\n  if (!node.childNodes) return false;\n\n  for (let i = 0; i < node.childNodes.length; i++) {\n    const child = node.childNodes[i];\n    if (types === 'code' && isCodeBlock_ && isCodeBlock_(child)) return true;\n    if (types.includes(child.nodeName)) return true;\n    if (nodeContains(child, types)) return true;\n  }\n\n  return false;\n};\n\nconst tableShouldBeHtml = (tableNode, options) => {\n  const possibleTags = [\n    'UL',\n    'OL',\n    'H1',\n    'H2',\n    'H3',\n    'H4',\n    'H5',\n    'H6',\n    'HR',\n    'BLOCKQUOTE',\n  ];\n\n  // In general we should leave as HTML tables that include other tables. The\n  // exception is with the Web Clipper when we import a web page with a layout\n  // that's made of HTML tables. In that case we have this logic of removing the\n  // outer table and keeping only the inner ones. For the Rich Text editor\n  // however we always want to keep nested tables.\n  if (options.preserveNestedTables) possibleTags.push('TABLE');\n\n  return nodeContains(tableNode, 'code') ||\n    nodeContains(tableNode, possibleTags);\n};\n\n// Various conditions under which a table should be skipped - i.e. each cell\n// will be rendered one after the other as if they were paragraphs.\nfunction tableShouldBeSkipped(tableNode) {\n  const cached = tableShouldBeSkippedCache_.get(tableNode);\n  if (cached !== undefined) return cached;\n\n  const result = tableShouldBeSkipped_(tableNode);\n\n  tableShouldBeSkippedCache_.set(tableNode, result);\n  return result;\n}\n\nfunction tableShouldBeSkipped_(tableNode) {\n  if (!tableNode) return true;\n  if (!tableNode.rows) return true;\n  if (tableNode.rows.length === 1 && tableNode.rows[0].childNodes.length <= 1) return true; // Table with only one cell\n  if (nodeContainsTable(tableNode)) return true;\n  return false;\n}\n\nfunction nodeParentDiv(node) {\n  let parent = node.parentNode;\n  while (parent.nodeName !== 'DIV') {\n    parent = parent.parentNode;\n    if (!parent) return null;\n  }\n  return parent;\n}\n\nfunction nodeParentTable(node) {\n  let parent = node.parentNode;\n  while (parent.nodeName !== 'TABLE') {\n    parent = parent.parentNode;\n    if (!parent) return null;\n  }\n  return parent;\n}\n\nfunction handleColSpan(content, node, emptyChar) {\n  const colspan = node.getAttribute('colspan') || 1;\n  for (let i = 1; i < colspan; i++) {\n    content += ' | ' + emptyChar.repeat(3);\n  }\n  return content\n}\n\nfunction tableColCount(node) {\n  let maxColCount = 0;\n  for (let i = 0; i < node.rows.length; i++) {\n    const row = node.rows[i];\n    const colCount = row.childNodes.length;\n    if (colCount > maxColCount) maxColCount = colCount;\n  }\n  return maxColCount\n}\n\nfunction tables (turndownService) {\n  isCodeBlock_ = turndownService.isCodeBlock;\n  options_ = turndownService.options;\n\n  turndownService.keep(function (node) {\n    if (node.nodeName === 'TABLE' && tableShouldBeHtml(node, turndownService.options)) return true;\n    return false;\n  });\n  for (var key in rules) turndownService.addRule(key, rules[key]);\n}\n\nfunction taskListItems (turndownService) {\n  turndownService.addRule('taskListItems', {\n    filter: function (node) {\n      return node.type === 'checkbox' && node.parentNode.nodeName === 'LI'\n    },\n    replacement: function (content, node) {\n      return (node.checked ? '[x]' : '[ ]') + ' '\n    }\n  });\n}\n\nfunction gfm (turndownService) {\n  turndownService.use([\n    highlightedCodeBlock,\n    strikethrough,\n    tables,\n    taskListItems\n  ]);\n}\n\nexports.gfm = gfm;\nexports.highlightedCodeBlock = highlightedCodeBlock;\nexports.strikethrough = strikethrough;\nexports.tables = tables;\nexports.taskListItems = taskListItems;\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,kBAAkB;AAEtB,aAAS,qBAAsB,iBAAiB;AAC9C,sBAAgB,QAAQ,wBAAwB;AAAA,QAC9C,QAAQ,SAAU,MAAM;AACtB,cAAI,aAAa,KAAK;AACtB,iBACE,KAAK,aAAa,SAClB,gBAAgB,KAAK,KAAK,SAAS,KACnC,cACA,WAAW,aAAa;AAAA,QAE5B;AAAA,QACA,aAAa,SAAU,SAAS,MAAM,SAAS;AAC7C,cAAI,YAAY,KAAK,aAAa;AAClC,cAAI,YAAY,UAAU,MAAM,eAAe,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;AAEjE,iBACE,SAAS,QAAQ,QAAQ,WAAW,OACpC,KAAK,WAAW,cAChB,OAAO,QAAQ,QAAQ;AAAA,QAE3B;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,cAAe,iBAAiB;AACvC,sBAAgB,QAAQ,iBAAiB;AAAA,QACvC,QAAQ,CAAC,OAAO,KAAK,QAAQ;AAAA,QAC7B,aAAa,SAAU,SAAS;AAC9B,iBAAO,OAAO,UAAU;AAAA,QAC1B;AAAA,MACF,CAAC;AAAA,IACH;AAEA,QAAI,UAAU,MAAM,UAAU;AAC9B,QAAI,QAAQ,MAAM,UAAU;AAC5B,QAAI,QAAQ,CAAC;AACb,QAAI,WAAW,EAAE,MAAM,QAAQ,OAAO,QAAQ,QAAQ,QAAQ;AAE9D,QAAI,eAAe;AACnB,QAAI,WAAW;AAKf,QAAM,6BAA6B,oBAAI,QAAQ;AAE/C,aAAS,aAAa,MAAM;AAC1B,aAAO,QAAQ,KAAK,aAAa,OAAO,KAAK,KAAK,MAAM,aAAa,IAAI,YAAY,IAAI;AAAA,IAC3F;AAEA,aAAS,UAAU,WAAW;AAC5B,aAAO,YAAY,SAAS,SAAS,IAAI;AAAA,IAC3C;AAEA,aAAS,mBAAmB,OAAO,aAAa;AAC9C,UAAI,QAAQ;AAAA,QACV,MAAM;AAAA,QACN,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,IAAI;AAAA,MACN;AAEA,UAAI,QAAQ;AAEZ,eAAS,IAAI,GAAG,IAAI,MAAM,KAAK,QAAQ,EAAE,GAAG;AAC1C,YAAI,MAAM,MAAM,KAAK,CAAC;AACtB,YAAI,cAAc,IAAI,WAAW,QAAQ;AACvC,cAAI,gBAAgB,aAAa,IAAI,WAAW,WAAW,CAAC;AAC5D,YAAE,MAAM,aAAa;AAErB,cAAI,MAAM,aAAa,IAAI,MAAM,KAAK,GAAG;AACvC,oBAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,UAAM,YAAY;AAAA,MAChB,QAAQ,CAAC,MAAM,IAAI;AAAA,MACnB,aAAa,SAAU,SAAS,MAAM;AACpC,YAAI,qBAAqB,gBAAgB,IAAI,CAAC,EAAG,QAAO;AACxD,eAAO,KAAK,SAAS,IAAI;AAAA,MAC3B;AAAA,IACF;AAEA,UAAM,WAAW;AAAA,MACf,QAAQ;AAAA,MACR,aAAa,SAAU,SAAS,MAAM;AACpC,cAAM,cAAc,gBAAgB,IAAI;AACxC,YAAI,qBAAqB,WAAW,EAAG,QAAO;AAE9C,YAAI,cAAc;AAElB,YAAI,aAAa,IAAI,GAAG;AACtB,gBAAM,WAAW,cAAc,WAAW;AAC1C,mBAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AACjC,kBAAM,YAAY,IAAI,KAAK,WAAW,SAAS,KAAK,WAAW,CAAC,IAAI;AACpE,gBAAI,SAAS,UAAU,mBAAmB,aAAa,CAAC,CAAC;AACzD,2BAAe,KAAK,QAAQ,WAAW,CAAC;AAAA,UAC1C;AAAA,QACF;AACA,eAAO,OAAO,WAAW,cAAc,OAAO,cAAc;AAAA,MAC9D;AAAA,IACF;AAEA,UAAM,QAAQ;AAAA,MACZ,QAAQ,SAAU,MAAM,SAAS;AAC/B,eAAO,KAAK,aAAa;AAAA,MAC3B;AAAA,MAEA,aAAa,SAAU,SAAS,MAAM;AAGpC,YAAI,kBAAkB,MAAM,QAAQ,GAAG;AACrC,cAAI,OAAO,KAAK;AAChB,cAAI,YAAY,cAAc,IAAI;AAYlC,cAAI,cAAc,QAAQ,CAAC,UAAU,UAAU,SAAS,sBAAsB,GAAE;AAC9E,mBAAO;AAAA;AAAA,oCAAyC,IAAI;AAAA;AAAA;AAAA,UACtD,OAAO;AACL,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,cAAI,qBAAqB,IAAI,EAAG,QAAO;AAGvC,oBAAU,QAAQ,QAAQ,QAAQ,IAAI;AAGtC,cAAI,aAAa,QAAQ,KAAK,EAAE,MAAM,IAAI;AAC1C,cAAI,WAAW,UAAU,EAAG,cAAa,WAAW,CAAC;AACrD,cAAI,sBAAsB,WAAW,KAAK,UAAU;AAEpD,cAAI,cAAc,cAAc,IAAI;AACpC,cAAI,cAAc;AAClB,cAAI,eAAe,CAAC,qBAAqB;AACvC,0BAAc,MAAM,SAAS,OAAO,WAAW,IAAI;AACnD,qBAAS,cAAc,GAAG,cAAc,aAAa,EAAE,aAAa;AAClE,6BAAe,MAAM,UAAU,mBAAmB,MAAM,WAAW,CAAC,IAAI;AAAA,YAC1E;AAAA,UACF;AAEA,gBAAM,iBAAiB,KAAK,UAAU,KAAK,QAAQ,eAAe,KAAK;AACvE,gBAAM,UAAU,iBAAiB,GAAG,cAAc;AAAA;AAAA,IAAS;AAC3D,gBAAM,eAAe,GAAG,WAAW,GAAG,OAAO,GAAG,UAAU;AAC1D,iBAAO;AAAA;AAAA,EAAO,OAAO,GAAG,YAAY;AAAA;AAAA;AAAA,QACtC;AAAA,MACF;AAAA,IACF;AAEA,UAAM,eAAe;AAAA,MACnB,QAAQ,CAAC,SAAS;AAAA,MAClB,aAAa,MAAM;AAAA,IACrB;AAEA,UAAM,gBAAgB;AAAA,MACpB,QAAQ,CAAC,YAAY,KAAK;AAAA,MAC1B,aAAa,MAAM;AAAA,IACrB;AAEA,UAAM,eAAe;AAAA,MACnB,QAAQ,CAAC,SAAS,SAAS,OAAO;AAAA,MAClC,aAAa,SAAU,SAAS;AAC9B,eAAO;AAAA,MACT;AAAA,IACF;AAOA,aAAS,aAAc,IAAI;AACzB,UAAI,aAAa,GAAG;AACpB,aACE,WAAW,aAAa,WAEtB,WAAW,eAAe,OACzB,WAAW,aAAa,WAAW,aAAa,UAAU,MAC3D,MAAM,KAAK,GAAG,YAAY,SAAU,GAAG;AAAE,eAAO,EAAE,aAAa;AAAA,MAAK,CAAC;AAAA,IAG3E;AAEA,aAAS,aAAc,SAAS;AAC9B,UAAI,kBAAkB,QAAQ;AAC9B,aACE,QAAQ,aAAa,YACnB,CAAC,mBAEC,gBAAgB,aAAa,WAC7B,SAAS,KAAK,gBAAgB,WAAW;AAAA,IAIjD;AAEA,aAAS,KAAM,SAAS,OAAO,MAAM,QAAQ,MAAM;AACjD,UAAI,UAAU,KAAM,SAAQ,QAAQ,KAAK,KAAK,WAAW,YAAY,IAAI;AACzE,UAAI,SAAS;AACb,UAAI,UAAU,EAAG,UAAS;AAC1B,UAAI,kBAAkB,QAAQ,KAAK,EAAE,QAAQ,SAAS,MAAM,EAAE,QAAQ,OAAO,MAAM;AACnF,wBAAkB,gBAAgB,QAAQ,QAAQ,KAAK;AACvD,aAAO,gBAAgB,SAAS,EAAG,oBAAmB;AACtD,UAAI,KAAM,mBAAkB,cAAc,iBAAiB,MAAM,GAAG;AACpE,aAAO,SAAS,kBAAkB;AAAA,IACpC;AAEA,aAAS,kBAAkB,MAAM;AAC/B,UAAI,CAAC,KAAK,WAAY,QAAO;AAE7B,eAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,cAAM,QAAQ,KAAK,WAAW,CAAC;AAC/B,YAAI,MAAM,aAAa,QAAS,QAAO;AACvC,YAAI,kBAAkB,KAAK,EAAG,QAAO;AAAA,MACvC;AACA,aAAO;AAAA,IACT;AAEA,QAAM,eAAe,CAAC,MAAM,UAAU;AACpC,UAAI,CAAC,KAAK,WAAY,QAAO;AAE7B,eAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,cAAM,QAAQ,KAAK,WAAW,CAAC;AAC/B,YAAI,UAAU,UAAU,gBAAgB,aAAa,KAAK,EAAG,QAAO;AACpE,YAAI,MAAM,SAAS,MAAM,QAAQ,EAAG,QAAO;AAC3C,YAAI,aAAa,OAAO,KAAK,EAAG,QAAO;AAAA,MACzC;AAEA,aAAO;AAAA,IACT;AAEA,QAAM,oBAAoB,CAAC,WAAW,YAAY;AAChD,YAAM,eAAe;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAOA,UAAI,QAAQ,qBAAsB,cAAa,KAAK,OAAO;AAE3D,aAAO,aAAa,WAAW,MAAM,KACnC,aAAa,WAAW,YAAY;AAAA,IACxC;AAIA,aAAS,qBAAqB,WAAW;AACvC,YAAM,SAAS,2BAA2B,IAAI,SAAS;AACvD,UAAI,WAAW,OAAW,QAAO;AAEjC,YAAM,SAAS,sBAAsB,SAAS;AAE9C,iCAA2B,IAAI,WAAW,MAAM;AAChD,aAAO;AAAA,IACT;AAEA,aAAS,sBAAsB,WAAW;AACxC,UAAI,CAAC,UAAW,QAAO;AACvB,UAAI,CAAC,UAAU,KAAM,QAAO;AAC5B,UAAI,UAAU,KAAK,WAAW,KAAK,UAAU,KAAK,CAAC,EAAE,WAAW,UAAU,EAAG,QAAO;AACpF,UAAI,kBAAkB,SAAS,EAAG,QAAO;AACzC,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,MAAM;AAC3B,UAAI,SAAS,KAAK;AAClB,aAAO,OAAO,aAAa,OAAO;AAChC,iBAAS,OAAO;AAChB,YAAI,CAAC,OAAQ,QAAO;AAAA,MACtB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,gBAAgB,MAAM;AAC7B,UAAI,SAAS,KAAK;AAClB,aAAO,OAAO,aAAa,SAAS;AAClC,iBAAS,OAAO;AAChB,YAAI,CAAC,OAAQ,QAAO;AAAA,MACtB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,SAAS,MAAM,WAAW;AAC/C,YAAM,UAAU,KAAK,aAAa,SAAS,KAAK;AAChD,eAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAChC,mBAAW,QAAQ,UAAU,OAAO,CAAC;AAAA,MACvC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,MAAM;AAC3B,UAAI,cAAc;AAClB,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,QAAQ,KAAK;AACzC,cAAM,MAAM,KAAK,KAAK,CAAC;AACvB,cAAM,WAAW,IAAI,WAAW;AAChC,YAAI,WAAW,YAAa,eAAc;AAAA,MAC5C;AACA,aAAO;AAAA,IACT;AAEA,aAAS,OAAQ,iBAAiB;AAChC,qBAAe,gBAAgB;AAC/B,iBAAW,gBAAgB;AAE3B,sBAAgB,KAAK,SAAU,MAAM;AACnC,YAAI,KAAK,aAAa,WAAW,kBAAkB,MAAM,gBAAgB,OAAO,EAAG,QAAO;AAC1F,eAAO;AAAA,MACT,CAAC;AACD,eAAS,OAAO,MAAO,iBAAgB,QAAQ,KAAK,MAAM,GAAG,CAAC;AAAA,IAChE;AAEA,aAAS,cAAe,iBAAiB;AACvC,sBAAgB,QAAQ,iBAAiB;AAAA,QACvC,QAAQ,SAAU,MAAM;AACtB,iBAAO,KAAK,SAAS,cAAc,KAAK,WAAW,aAAa;AAAA,QAClE;AAAA,QACA,aAAa,SAAU,SAAS,MAAM;AACpC,kBAAQ,KAAK,UAAU,QAAQ,SAAS;AAAA,QAC1C;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,IAAK,iBAAiB;AAC7B,sBAAgB,IAAI;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAEA,YAAQ,MAAM;AACd,YAAQ,uBAAuB;AAC/B,YAAQ,gBAAgB;AACxB,YAAQ,SAAS;AACjB,YAAQ,gBAAgB;AAAA;AAAA;",
  "names": []
}
